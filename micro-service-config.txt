##micro-services
# 普通的微服务，可以借助application-name在zuul上实现负载均衡

#bom
--------------------------------------------------
<dependency>
	<groupId>org.springframework.cloud</groupId>
	<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
	<version>2.2.3.RELEASE</version>
</dependency>


<parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.3.6.RELEASE</version>
	<relativePath/> <!-- lookup parent from repository -->
</parent>




#bootApplication.class
--------------------------------------------------
@EnableEurekaClient



#application.properties
--------------------------------------------------
#修改内置tomcat端口号
server.port=8081
#设置项目上下文
server.servlet.context-path=/micro-services

#负载均衡(ribbon),是zuul中默认集成的，只要这里的application-name值一样，那么将会进行自动的zuul负载均衡
#也就是访问zuul进行网关转发的时候，会自动进行转发到具体的哪一个同名的微服务中去
#当然这就要求你的接口要一致，否则还处理个什么
spring.application.name=micro-services

eureka.client.service-url.defaultZone=http://localhost:9999/eureka/
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10
eureka.instance.instance_id=${spring.cloud.client.hostname}:${server.port}


#浏览器访问
http://localhost:9999